# Generated by Django 3.2.16 on 2022-11-24 04:11

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    replaces = [('core', '0001_initial'), ('core', '0002_remove_user_commission'), ('core', '0003_user_rank'), ('core', '0004_user_avatar'), ('core', '0005_auto_20200505_1149'), ('core', '0006_auto_20201002_1424'), ('core', '0007_auto_20201002_1426'), ('core', '0008_auto_20201125_1926'), ('core', '0009_alter_user_id'), ('core', '0010_auto_20220406_1631'), ('core', '0011_user_founder_uuid'), ('core', '0012_auto_20220410_2122'), ('core', '0013_user_balance'), ('core', '0014_alter_user_balance'), ('core', '0015_alter_user_balance'), ('core', '0016_alter_user_balance')]

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=100, unique=True, verbose_name='Email')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Fecha de nacimiento')),
                ('gender', models.CharField(choices=[('M', 'Masculino'), ('F', 'Femenino')], default='M', max_length=1, verbose_name='GÃ©nero')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nombre')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
                ('rank', models.CharField(choices=[('0', 'IRON'), ('1', 'BRONZE'), ('2', 'SILVER'), ('3', 'GOLD'), ('4', 'PLATINUM'), ('5', 'DIAMOND'), ('6', 'MASTER'), ('7', 'GRANDMASTER'), ('8', 'CHALLENGER')], default='0', max_length=50)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('is_founder', models.BooleanField(default=False)),
                ('is_founder_emailed', models.BooleanField(default=False)),
                ('guid', models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ('balance', models.BigIntegerField(default=219000000000)),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'ordering': ['pk'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
